version: '3.9'
services:
  server:
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - '8000:80'
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql

  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
      #context: ./dockerfiles
    volumes:
      - ./src:/var/www/html:delegated
      #delegated means if d container should writes some data there, It's not instantly reflected back to the
      #host machine instead it's basically processed in batched,;performance is a bit better therefore.
      #Laravel will generate some files wen it runs e.g views which are sent back as part of responses
  mysql:
    image: mysql:8.4.3
    env_file:
      - ./env/mysql.env
    ports:
      - '3306:3306'
    volumes:
      - mysqldb-data:/var/lib/mysql

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
#      #BIND MOUNT - will mirror back into source if used 2 install
      - ./src:/var/www/html
  artisan:
    #Needs PHP to execute too
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    # override existing entrypoint if any.
    entrypoint: ["php", "/var/www/html/artisan"]
    #i.e php artisan OUR_OWN_COMMAND
  npm:
    image: node:18
    #can use dockerfile also
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html

volumes:
  mysqldb-data:
    driver: local